# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import evtmanager_pb2 as evtmanager__pb2


class informationExchangeStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.PushLog = channel.unary_unary(
        '/informationExchange/PushLog',
        request_serializer=evtmanager__pb2.evtMgr.SerializeToString,
        response_deserializer=evtmanager__pb2.ack.FromString,
        )
    self.getInfo = channel.unary_unary(
        '/informationExchange/getInfo',
        request_serializer=evtmanager__pb2.ack.SerializeToString,
        response_deserializer=evtmanager__pb2.information.FromString,
        )


class informationExchangeServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def PushLog(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_informationExchangeServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'PushLog': grpc.unary_unary_rpc_method_handler(
          servicer.PushLog,
          request_deserializer=evtmanager__pb2.evtMgr.FromString,
          response_serializer=evtmanager__pb2.ack.SerializeToString,
      ),
      'getInfo': grpc.unary_unary_rpc_method_handler(
          servicer.getInfo,
          request_deserializer=evtmanager__pb2.ack.FromString,
          response_serializer=evtmanager__pb2.information.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'informationExchange', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
